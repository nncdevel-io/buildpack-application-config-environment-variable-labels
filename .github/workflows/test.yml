name: Tests

"on":
  pull_request: {}
  push:
    branches:
      - main
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: setup
        uses: actions/setup-go@v3
        with:
          go-version: "1.18"
        id: go
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup
        uses: actions/setup-go@v3
        with:
          go-version: "1.18"
        id: go
      - name: build
        run: "./scripts/build.sh"
      - name: Archive binary
        uses: actions/upload-artifact@v3
        with:
          name: binary
          path: bin
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup
        uses: actions/setup-go@v3
        with:
          go-version: "1.18"
        id: go
      - name: test
        run: go version && go test -race -coverprofile=coverage.xml -covermode=atomic ./... -v
      - name: upload coverage
        uses: codecov/codecov-action@v1
        with:
          files: ./coverage.xml
          verbose: true
  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup
        uses: actions/setup-go@v3
        with:
          go-version: "1.18"
        id: go
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.46.2

  create-package:
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Install pack
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          echo "Installing pack ${PACK_VERSION}"
          mkdir -p "${HOME}"/bin
          echo "${HOME}/bin" >> "${GITHUB_PATH}"
          curl \
            --location \
            --show-error \
            --silent \
            "https://github.com/buildpacks/pack/releases/download/v${PACK_VERSION}/pack-v${PACK_VERSION}-linux.tgz" \
          | tar -C "${HOME}"/bin -xz pack
        env:
          PACK_VERSION: 0.27.0
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: binary
          path: bin
      - name: Create Package
        run: |
          #!/usr/bin/env bash
          set -euo pipefail

          mkdir -p "buildpack"
          cp -r bin "buildpack"
          cp -r buildpack.toml "buildpack"
      - name: Create Buildpack
        run: |
          #!/usr/bin/env bash
          set -euo pipefail

          pack buildpack package \
            ${PACKAGE}:latest \
            --config package.toml \
            --format image

        env:
          PACKAGE: "nncdevel/buildpack-application-config-environment-variable-labels"
